{{/*
Generate secrets for UAA.  This template creates multiple Secret resources.
*/}}

{{- $values := .Values -}}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-admin-client-credentials
  labels:
    {{- include "uaa.labels" . | nindent 4 }}
type: Opaque
stringData:
  admin_client_credentials.yml: |
    oauth:
      clients:
        admin:
          secret: {{ $values.admin.client_secret }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-jwt-policy-signing-keys
  labels:
    {{- include "uaa.labels" . | nindent 4 }}
type: Opaque
stringData:
  jwt_policy_signing_keys.yml: |
    jwt:
      token:
        policy:
          activeKeyId: {{ $values.jwt.policy.activeKeyId }}
          keys:
            signingAlg: {{ $values.jwt.policy.keys.signingAlg | default "RS256" }}
            {{ $values.jwt.policy.activeKeyId }}:
              signingKey: |-
                {{ index $values.jwt.policy.keys ($values.jwt.policy.activeKeyId) "signingKey" }}
              {{- if (index $values.jwt.policy.keys ($values.jwt.policy.activeKeyId) "signingCert") }}
              signingCert: |-
                {{ index $values.jwt.policy.keys ($values.jwt.policy.activeKeyId) "signingCert" }}
              {{- end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-saml-keys
  labels:
    {{- include "uaa.labels" . | nindent 4 }}
type: Opaque
stringData:
  saml_keys.yml: |
    login:
      saml:
        activeKeyId: {{ $values.login.saml.activeKeyId }}
        keys:
          {{ $values.login.saml.activeKeyId }}:
            key: |-
              {{ index $values.login.saml.keys ($values.login.saml.activeKeyId) "key" }}
            {{- if (index $values.login.saml.keys ($values.login.saml.activeKeyId) "certificate") }}
            certificate: |-
              {{ index $values.login.saml.keys ($values.login.saml.activeKeyId) "certificate" }}
            {{- end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-encryption-keys
  labels:
    {{- include "uaa.labels" . | nindent 4 }}
type: Opaque
stringData:
  encryption_keys.yml: |
    encryption:
      active_key_label: {{ $values.encryption.active_key_label }}
      encryption_keys:
      {{- range $values.encryption.encryption_keys }}
        - label: {{ .label }}
          passphrase: {{ .passphrase }}
          encryptionKey: {{ .encryptionKey}}
      {{- end }}


{{- if or $values.database.username $values.database.password }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-database-credentials
  labels:
    {{- include "uaa.labels" . | nindent 4 }}
type: Opaque
stringData:
  database_credentials.yml: |
    database:
      username: {{ $values.database.username }}
      password: {{ $values.database.password }}
{{- end }}

{{- if or $values.smtp.user $values.smtp.password }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-smtp-credentials
  labels:
    {{- include "uaa.labels" . | nindent 4 }}
type: Opaque
stringData:
  smtp_credentials.yml: |
    smtp:
      user:  {{ $values.smtp.user }}
      password: {{ $values.smtp.password }}
{{- end }}

{{- if $values.ca_certs }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-ca-certs
  labels:
    {{- include "uaa.labels" . | nindent 4 }}
type: Opaque
data:
  {{- $i := 0 }}
  {{- range $values.ca_certs }}
  uaa-ca-cert{{ $i }}.pem: {{ . | b64enc }}
    {{- $i = add1 $i }}
  {{- end }}
{{- end }}